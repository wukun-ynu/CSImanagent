<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.test.demo.dao.DocumentInfDao">
    <resultMap id="documentUserResultMap" type="com.test.demo.entity.DocumentInf">
        <id column="doc_id" property="docId"/>
        <result column="user_id" property="userId"/>
        <result column="title" property="title"/>
        <result column="file_name" property="fileName"/>
        <result column="remark" property="remark"/>
        <result column="create_time" property="createTime"/>
        <result column="file_path" property="filePath"/>
        <association property="userInf" column="user_id" javaType="com.test.demo.entity.UserInf">
            <id column="user_id" property="userId"/>
            <result column="login_name" property="loginName"/>
            <result column="password" property="password"/>
            <result column="status" property="status"/>
            <result column="create_date" property="createDate"/>
            <result column="user_name" property="userName"/>
            <result column="face_url" property="faceUrl"/>
            <result column="face_path" property="facePath"/>
        </association>
    </resultMap>
    <select id="queryDocumentInfList" resultMap="documentUserResultMap">
        SELECT
        d.doc_id,
        d.user_id,
        d.title,
        d.file_name,
        d.remark,
        d.create_time,
        d.file_path,
        u.*
        FROM
        document_inf as d,
        user_inf as u
        where
        d.user_id = u.user_id
    </select>
    <select id="queryDocumentInfPage" resultMap="documentUserResultMap">
        SELECT
        d.doc_id,
        d.user_id,
        d.title,
        d.file_name,
        d.remark,
        d.create_time,
        d.file_path,
        u.*
        FROM
        document_inf as d,
        user_inf as u
        where
        d.user_id = u.user_id
        order by
        d.doc_id asc
        LIMIT #{rowIndex},#{pageSize};
    </select>
    <select id="queryDocumentInfPageCount" resultType="int">
        select
        count(1)
        FROM
        document_inf as d,
        user_inf as u
        where
        d.user_id = u.user_id
    </select>
    <select id="queryDocumentInf" resultMap="documentUserResultMap">
        select
        d.doc_id,
        d.user_id,
        d.title,
        d.file_name,
        d.remark,
        d.create_time,
        d.file_path,
        u.user_id,
        u.login_name,
        u.password,
        u.status,
        u.create_date,
        u.user_name,
        u.face_url,
        u.face_path
        from
        document_inf as d, user_inf as u
        <where>
            <if test="documentInfCondition.title!=null">
                and d.title like '%${documentInfCondition.title}%'
            </if>
            and d.user_id = u.user_id
        </where>
        order by
        d.doc_id asc
        LIMIT #{rowIndex},#{pageSize};
    </select>
    <select id="queryDocumentInfCount" resultType="int">
        select
        count(1)l
        from
        document_inf as d, user_inf as u
        <where>
            <if test="documentInfCondition.title!=null">
                and d.title like '%${documentInfCondition.title}%'
            </if>
            and d.user_id = u.user_id
        </where>
    </select>
    <insert id="insertDocumentInf" parameterType="com.test.demo.entity.DocumentInf"
            useGeneratedKeys="true" keyProperty="docId" keyColumn="doc_id">
        insert into
        document_inf(
        user_id,
        title,
        file_name,
        remark,
        create_time,
        file_path
        )
        values
        (#{userId},#{title},#{fileName},#{remark},#{createTime},#{filePath})
    </insert>
    <update id="updateDocumentInf" parameterType="com.test.demo.entity.DocumentInf">
        update
        document_inf
        <set>
            <if test="title != null">
                title = #{title},
            </if>
            <if test="fileName != null">
                file_name = #{fileName},
            </if>
            <if test="remark != null">
                remark = #{remark},
            </if>
            <if test="filePath != null">
                file_path = #{filePath},
            </if>
        </set>
        where
        doc_id = #{docId}
    </update>
    <delete id="deleteDocumentInf" parameterType="Long">
        delete from
        document_inf
        where
        doc_id in
        <foreach collection="list" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>
</mapper>