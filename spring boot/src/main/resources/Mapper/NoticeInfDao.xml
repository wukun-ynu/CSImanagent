<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.test.demo.dao.NoticeInfDao">
    <resultMap id="noticeUserResultMap" type="com.test.demo.entity.NoticeInf">
        <id column="notice_id" property="noticeId"/>
        <result column="user_id" property="userId"/>
        <result column="title" property="title"/>
        <result column="content" property="content"/>
        <result column="create_time" property="createTime"/>
        <association property="userInf" column="user_id" javaType="com.test.demo.entity.UserInf">
            <id column="user_id" property="userId"/>
            <result column="login_name" property="loginName"/>
            <result column="password" property="password"/>
            <result column="status" property="status"/>
            <result column="create_date" property="createDate"/>
            <result column="user_name" property="userName"/>
            <result column="face_url" property="faceUrl"/>
            <result column="face_path" property="facePath"/>
        </association>
    </resultMap>
    <select id="queryNoticeInfList" resultMap="noticeUserResultMap">
        SELECT
        n.notice_id,
        n.user_id,
        n.title,
        n.content,
        n.create_time,
        u.*
        FROM
        notice_inf as n,
        user_inf as u
        where
        n.user_id = u.user_id
    </select>
    <select id="queryNoticeInfPage" resultMap="noticeUserResultMap">
        SELECT
        n.notice_id,
        n.user_id,
        n.title,
        n.content,
        n.create_time,
        u.*
        FROM
        notice_inf as n,
        user_inf as u
        where
        n.user_id = u.user_id
        order by
        n.notice_id asc
        LIMIT #{rowIndex},#{pageSize};
    </select>
    <select id="queryNoticeInfPageCount" resultType="int">
        select
        count(1)
        FROM
        notice_inf as n,
        user_inf as u
        where
        n.user_id = u.user_id
    </select>
    <select id="queryNoticeInf" resultMap="noticeUserResultMap">
        select
        n.notice_id,
        n.user_id,
        n.title,
        n.content,
        n.create_time,
        u.user_id,
        u.login_name,
        u.password,
        u.status,
        u.create_date,
        u.user_name,
        u.face_url,
        u.face_path
        from
        notice_inf as n, user_inf as u
        <where>
            <if test="noticeInfCondition.title!=null">
                and n.title like '%${noticeInfCondition.title}%'
            </if>
            <if test="noticeInfCondition.content != null">
                and n.content like '%${noticeInfCondition.content}%'
            </if>
            and n.user_id = u.user_id
        </where>
        order by
        n.notice_id asc
        LIMIT #{rowIndex},#{pageSize};
    </select>
    <select id="queryNoticeInfConut" resultType="int">
        select
        count(1)
        from
        notice_inf as n, user_inf as u
        <where>
            <if test="noticeInfCondition.title != null">
                and n.title like '%${noticeInfCondition.title}%'
            </if>
            <if test="noticeInfCondition.content != null">
                and n.content like '%${noticeInfCondition.content}%'
            </if>
            and n.user_id = u.user_id
        </where>
    </select>
    <insert id="insertNoticeInf" parameterType="com.test.demo.entity.NoticeInf"
            useGeneratedKeys="true" keyProperty="noticeId" keyColumn="notice_id">
        insert into
        notice_inf(
        user_id,
        title,
        content,
        create_time)
        values
        (#{userId},#{title},#{content},#{createTime})
    </insert>
    <update id="updateNoticeInf" parameterType="com.test.demo.entity.NoticeInf">
        update
        notice_inf
        <set>
            <if test="title != null">
                title = #{title},
            </if>
            <if test="content != null">
                content = #{content},
            </if>
        </set>
        where
        notice_id = #{noticeId}
    </update>
    <delete id="deleteNoticeInf" parameterType="Long">
        delete from
        notice_inf
        where
        notice_id in
        <foreach collection="list" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>
</mapper>